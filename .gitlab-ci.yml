image: docker:20.10.16

services:
  - docker:20.10.16-dind

stages:
  - test
  - release

variables:
  # Runner
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_DRIVER: overlay2  # Faster storage procedures
  PRODUCTION_BRANCH: "main"

# testing:
#   stage: test
#   rules:
#     - if: '$CI_COMMIT_BRANCH =~ /^release\/v\d+[\-|\.]\d+[\-|\.]\d+$/'
#       when: always
#     - when: never
#   image:
#     name: golang:1.23.3-alpine
#     entrypoint: [""]
#   script: 
#     - apk add git
#     - go env -w GOPRIVATE="gitlab.com/aplicacao/*"
#     - touch ~/.netrc
#     - echo -e "machine gitlab.com\n login $CI_PERSONAL_USER\n password $CI_PERSONAL_ACCESS_TOKEN" > ~/.netrc
#     - sh ./test.sh
#   tags:
#     - production

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^release\/v\d+[\-|\.]\d+[\-|\.]\d+$/'
      when: on_success
    - when: never
  script:
    - echo "Running release job for '$CI_PROJECT_NAME' at branch '$CI_COMMIT_BRANCH'"
    - export TAG_NAME=$(echo $CI_COMMIT_BRANCH | sed 's/release\///' | sed 's/-/\./g')
    - echo "Creating tag $TAG_NAME"
    - |
      release-cli create --name "$CI_COMMIT_BRANCH" \
                         --tag-name "$TAG_NAME" \
                         --ref "$CI_COMMIT_SHA" \
                         --description "Release for $TAG_NAME"
  tags:
    - production
